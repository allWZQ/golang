package aliyuncvc

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// QueryStatistics invokes the aliyuncvc.QueryStatistics API synchronously
// api document: https://help.aliyun.com/api/aliyuncvc/querystatistics.html
func (client *Client) QueryStatistics(request *QueryStatisticsRequest) (response *QueryStatisticsResponse, err error) {
	response = CreateQueryStatisticsResponse()
	err = client.DoAction(request, response)
	return
}

// QueryStatisticsWithChan invokes the aliyuncvc.QueryStatistics API asynchronously
// api document: https://help.aliyun.com/api/aliyuncvc/querystatistics.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) QueryStatisticsWithChan(request *QueryStatisticsRequest) (<-chan *QueryStatisticsResponse, <-chan error) {
	responseChan := make(chan *QueryStatisticsResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.QueryStatistics(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// QueryStatisticsWithCallback invokes the aliyuncvc.QueryStatistics API asynchronously
// api document: https://help.aliyun.com/api/aliyuncvc/querystatistics.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) QueryStatisticsWithCallback(request *QueryStatisticsRequest, callback func(response *QueryStatisticsResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *QueryStatisticsResponse
		var err error
		defer close(result)
		response, err = client.QueryStatistics(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// QueryStatisticsRequest is the request struct for api QueryStatistics
type QueryStatisticsRequest struct {
	*requests.RpcRequest
	EndTime   string `position:"Query" name:"EndTime"`
	StartTime string `position:"Query" name:"StartTime"`
}

// QueryStatisticsResponse is the response struct for api QueryStatistics
type QueryStatisticsResponse struct {
	*responses.BaseResponse
	ErrorCode int                   `json:"ErrorCode" xml:"ErrorCode"`
	Message   string                `json:"Message" xml:"Message"`
	Success   bool                  `json:"Success" xml:"Success"`
	RequestId string                `json:"RequestId" xml:"RequestId"`
	Data      DataInQueryStatistics `json:"Data" xml:"Data"`
}

// CreateQueryStatisticsRequest creates a request to invoke QueryStatistics API
func CreateQueryStatisticsRequest() (request *QueryStatisticsRequest) {
	request = &QueryStatisticsRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("aliyuncvc", "2019-09-19", "QueryStatistics", "aliyuncvc", "openAPI")
	request.Method = requests.POST
	return
}

// CreateQueryStatisticsResponse creates a response to parse from QueryStatistics response
func CreateQueryStatisticsResponse() (response *QueryStatisticsResponse) {
	response = &QueryStatisticsResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
